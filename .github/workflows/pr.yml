name: Run PR Checks
on: pull_request

jobs:
  publish-database:
    name: Publish Database
    runs-on: ubuntu-latest
    environment: "Neon.tech Staging"
    # permissions:
    #   contents: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x.x'
          dotnet-quality: 'preview'
          # cache: true
      # - run: dotnet restore --locked-mode
      # - name: Setup PowerShell module cache
      #   id: cacher
      #   uses: actions/cache@v3
      #   with:
      #     path: "~/.local/share/powershell/Modules"
      #     key: ${{ runner.os }}-SqlServer-PSScriptAnalyzer
      - name: Install required PowerShell modules
        # if: steps.cacher.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          cd YaqeenDAL
          dotnet tool install --global dotnet-ef
          dotnet add package Microsoft.EntityFrameworkCore --version 7.0.11
          dotnet add package Microsoft.EntityFrameworkCore.Design --version 7.0.11
          dotnet add package Microsoft.EntityFrameworkCore.Tools --version 7.0.11
          dotnet add package Npgsql.EntityFrameworkCore.PostgreSQL --version 7.0.11
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Generate Migrations
        shell: pwsh
        run: |
          cd YaqeenDAL
          dotnet build
          echo "built!"
          echo "Branch: ${{ steps.extract_branch.outputs.branch }}"
          dotnet ef migrations add ${{ steps.extract_branch.outputs.branch }} -v
          git status
      - name: Commit report
        run: |
          git config --global user.name 'Haytham Abuelfutuh'
          git config --global user.email 'haytham@afutuh.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push --set-upstream origin ${{ steps.extract_branch.outputs.branch }}
          git add -A
          git commit -am "Automated report"
          git push -u